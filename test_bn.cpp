#include "testCaseBatchNorm_1.hxx"

#include <algorithm>
#include <iostream>
#include <chrono>
#include <stdlib.h>
#include <time.h>

int main(){
   const int batchsize =2;
   float inputss[60 * batchsize] = {
      -1.213650226593017578e+00,
      -3.631028831005096436e-01,
      6.736789345741271973e-01,
      -2.381267584860324860e-02,
      -6.595716476440429688e-01,
      6.738584637641906738e-01,
      -1.685422658920288086e+00,
      -5.521838320419192314e-04,
      -1.707162261009216309e-01,
      2.860194146633148193e-01,
      7.241332530975341797e-01,
      -8.177430927753448486e-02,
      3.667008578777313232e-01,
      1.033772349357604980e+00,
      -3.658734560012817383e-01,
      9.276898950338363647e-02,
      -1.857407838106155396e-01,
      -7.937949895858764648e-02,
      -1.089570045471191406e+00,
      -3.401320874691009521e-01,
      -1.294200420379638672e+00,
      -1.444739699363708496e+00,
      1.159088492393493652e+00,
      -3.700683414936065674e-01,
      -2.117211967706680298e-01,
      -6.741436719894409180e-01,
      -1.605118870735168457e+00,
      4.588275849819183350e-01,
      -7.366651296615600586e-02,
      -6.952162832021713257e-02,
      4.522559046745300293e-02,
      -1.634084939956665039e+00,
      -7.855715751647949219e-01,
      1.531428694725036621e+00,
      1.089013740420341492e-02,
      1.763887524604797363e+00,
      -7.445077300071716309e-01,
      -1.570748567581176758e+00,
      -9.273767471313476562e-01,
      1.055637281388044357e-02,
      2.343409061431884766e-01,
      -2.575475536286830902e-02,
      -1.059834718704223633e+00,
      8.181522786617279053e-02,
      5.116857290267944336e-01,
      5.426111221313476562e-01,
      -8.342406153678894043e-01,
      -2.644939720630645752e-01,
      -1.551748871803283691e+00,
      -2.154813051223754883e+00,
      8.804143071174621582e-01,
      1.612503290176391602e+00,
      -1.417661547660827637e+00,
      -1.638611435890197754e+00,
      7.508187554776668549e-03,
      -6.152859926223754883e-01,
      -3.008187413215637207e-01,
      -1.230668306350708008e+00,
      5.117461085319519043e-01,
      -1.721082568168640137e+00,
      -1.381801605224609375e+00,
      -9.179547429084777832e-01,
      -1.085689783096313477e+00,
      -2.976698875427246094e-01,
      1.288171052932739258e+00,
      4.595861136913299561e-01,
      1.232540369033813477e+00,
      2.058547437191009521e-01,
      3.206811472773551941e-02,
      -3.984090089797973633e-01,
      -1.449536979198455811e-01,
      -1.901254802942276001e-01,
      -3.509021103382110596e-01,
      9.295203089714050293e-01,
      1.394394755363464355e+00,
      9.753606319427490234e-01,
      4.206258654594421387e-01,
      4.827896356582641602e-01,
      8.345180153846740723e-01,
      -9.952217936515808105e-01,
      -3.073784410953521729e-01,
      -2.125006169080734253e-01,
      -1.939751207828521729e-01,
      6.180965304374694824e-01,
      2.072717428207397461e+00,
      -7.721598148345947266e-01,
      6.060057878494262695e-01,
      -1.032740712165832520e+00,
      2.633711099624633789e-01,
      2.844950743019580841e-02,
      1.135208457708358765e-01,
      7.239739894866943359e-01,
      1.737454414367675781e+00,
      -1.757599353790283203e+00,
      -7.269498705863952637e-01,
      9.128167629241943359e-01,
      3.904723823070526123e-01,
      1.625073790550231934e+00,
      1.708614975214004517e-01,
      -1.766001284122467041e-01,
      -6.817170232534408569e-02,
      7.027400135993957520e-01,
      1.062606930732727051e+00,
      2.775924280285835266e-03,
      6.634699702262878418e-01,
      -1.471236228942871094e+00,
      1.242510795593261719e+00,
      4.220381677150726318e-01,
      5.746005177497863770e-01,
      -7.983267903327941895e-01,
      -8.686848878860473633e-01,
      -1.386384606361389160e+00,
      1.911131143569946289e-01,
      1.981181144714355469e+00,
      5.502402782440185547e-01,
      -2.034442901611328125e+00,
      -1.270915031433105469e+00,
      4.730931222438812256e-01,
      2.279908657073974609e-01,
      -1.459337592124938965e+00
   };

   auto t1 = std::chrono::high_resolution_clock::now();
   auto out = TMVA_SOFIE_testCaseBatchNorm_1::infer(inputss);
   auto t2 = std::chrono::high_resolution_clock::now();
   for (auto& i: out){
      std::cout << i << ",";
   }
   //free(inputss);
   auto duration = std::chrono::duration_cast<std::chrono::microseconds>( t2 - t1 ).count();
   std::cout << std::endl << duration << std::endl;
}
